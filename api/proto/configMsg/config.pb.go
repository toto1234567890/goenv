// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: config.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigMsg_ConfigClientCmd int32

const (
	ConfigMsg_update_mem_config     ConfigMsg_ConfigClientCmd = 0
	ConfigMsg_update_config_object  ConfigMsg_ConfigClientCmd = 1
	ConfigMsg_get_mem_config        ConfigMsg_ConfigClientCmd = 2
	ConfigMsg_get_config_object     ConfigMsg_ConfigClientCmd = 3
	ConfigMsg_add_config_listener   ConfigMsg_ConfigClientCmd = 4
	ConfigMsg_dump_mem_config       ConfigMsg_ConfigClientCmd = 5
	ConfigMsg_get_notif_loglevel    ConfigMsg_ConfigClientCmd = 6
	ConfigMsg_update_notif_loglevel ConfigMsg_ConfigClientCmd = 7
)

// Enum value maps for ConfigMsg_ConfigClientCmd.
var (
	ConfigMsg_ConfigClientCmd_name = map[int32]string{
		0: "update_mem_config",
		1: "update_config_object",
		2: "get_mem_config",
		3: "get_config_object",
		4: "add_config_listener",
		5: "dump_mem_config",
		6: "get_notif_loglevel",
		7: "update_notif_loglevel",
	}
	ConfigMsg_ConfigClientCmd_value = map[string]int32{
		"update_mem_config":     0,
		"update_config_object":  1,
		"get_mem_config":        2,
		"get_config_object":     3,
		"add_config_listener":   4,
		"dump_mem_config":       5,
		"get_notif_loglevel":    6,
		"update_notif_loglevel": 7,
	}
)

func (x ConfigMsg_ConfigClientCmd) Enum() *ConfigMsg_ConfigClientCmd {
	p := new(ConfigMsg_ConfigClientCmd)
	*p = x
	return p
}

func (x ConfigMsg_ConfigClientCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigMsg_ConfigClientCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (ConfigMsg_ConfigClientCmd) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x ConfigMsg_ConfigClientCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigMsg_ConfigClientCmd.Descriptor instead.
func (ConfigMsg_ConfigClientCmd) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1, 0}
}

type ConfigMsg_ConfigServerMsg int32

const (
	ConfigMsg_propagate_mem_config     ConfigMsg_ConfigServerMsg = 0
	ConfigMsg_mem_config_update_done   ConfigMsg_ConfigServerMsg = 1
	ConfigMsg_propagate_config         ConfigMsg_ConfigServerMsg = 2
	ConfigMsg_config_update_done       ConfigMsg_ConfigServerMsg = 3
	ConfigMsg_mem_config_update_failed ConfigMsg_ConfigServerMsg = 4
	ConfigMsg_config_update_failed     ConfigMsg_ConfigServerMsg = 5
	ConfigMsg_propagate_notif_loglevel ConfigMsg_ConfigServerMsg = 6
	ConfigMsg_send_config_init         ConfigMsg_ConfigServerMsg = 7
	ConfigMsg_send_mem_config_init     ConfigMsg_ConfigServerMsg = 8
	ConfigMsg_send_notif_loglevel_init ConfigMsg_ConfigServerMsg = 9
)

// Enum value maps for ConfigMsg_ConfigServerMsg.
var (
	ConfigMsg_ConfigServerMsg_name = map[int32]string{
		0: "propagate_mem_config",
		1: "mem_config_update_done",
		2: "propagate_config",
		3: "config_update_done",
		4: "mem_config_update_failed",
		5: "config_update_failed",
		6: "propagate_notif_loglevel",
		7: "send_config_init",
		8: "send_mem_config_init",
		9: "send_notif_loglevel_init",
	}
	ConfigMsg_ConfigServerMsg_value = map[string]int32{
		"propagate_mem_config":     0,
		"mem_config_update_done":   1,
		"propagate_config":         2,
		"config_update_done":       3,
		"mem_config_update_failed": 4,
		"config_update_failed":     5,
		"propagate_notif_loglevel": 6,
		"send_config_init":         7,
		"send_mem_config_init":     8,
		"send_notif_loglevel_init": 9,
	}
)

func (x ConfigMsg_ConfigServerMsg) Enum() *ConfigMsg_ConfigServerMsg {
	p := new(ConfigMsg_ConfigServerMsg)
	*p = x
	return p
}

func (x ConfigMsg_ConfigServerMsg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigMsg_ConfigServerMsg) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[1].Descriptor()
}

func (ConfigMsg_ConfigServerMsg) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[1]
}

func (x ConfigMsg_ConfigServerMsg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigMsg_ConfigServerMsg.Descriptor instead.
func (ConfigMsg_ConfigServerMsg) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1, 1}
}

// client and server
type KeysValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValue map[string]string `protobuf:"bytes,1,rep,name=KeyValue,proto3" json:"KeyValue,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KeysValues) Reset() {
	*x = KeysValues{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeysValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysValues) ProtoMessage() {}

func (x *KeysValues) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysValues.ProtoReflect.Descriptor instead.
func (*KeysValues) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *KeysValues) GetKeyValue() map[string]string {
	if x != nil {
		return x.KeyValue
	}
	return nil
}

type ConfigMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqClient          ConfigMsg_ConfigClientCmd `protobuf:"varint,1,opt,name=ReqClient,proto3,enum=Config.ConfigMsg_ConfigClientCmd" json:"ReqClient,omitempty"`
	SectionsKeysValues map[string]*KeysValues    `protobuf:"bytes,2,rep,name=SectionsKeysValues,proto3" json:"SectionsKeysValues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RespServer         ConfigMsg_ConfigServerMsg `protobuf:"varint,3,opt,name=RespServer,proto3,enum=Config.ConfigMsg_ConfigServerMsg" json:"RespServer,omitempty"`
}

func (x *ConfigMsg) Reset() {
	*x = ConfigMsg{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMsg) ProtoMessage() {}

func (x *ConfigMsg) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMsg.ProtoReflect.Descriptor instead.
func (*ConfigMsg) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigMsg) GetReqClient() ConfigMsg_ConfigClientCmd {
	if x != nil {
		return x.ReqClient
	}
	return ConfigMsg_update_mem_config
}

func (x *ConfigMsg) GetSectionsKeysValues() map[string]*KeysValues {
	if x != nil {
		return x.SectionsKeysValues
	}
	return nil
}

func (x *ConfigMsg) GetRespServer() ConfigMsg_ConfigServerMsg {
	if x != nil {
		return x.RespServer
	}
	return ConfigMsg_propagate_mem_config
}

var File_config_proto protoreflect.FileDescriptor

var file_config_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xb2, 0x06, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x3f,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6d, 0x64, 0x52, 0x09, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x59, 0x0a, 0x12, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x2e, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x52, 0x65,
	0x73, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x59, 0x0a,
	0x17, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x15, 0x0a, 0x11,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x10,
	0x04, 0x12, 0x13, 0x0a, 0x0f, 0x64, 0x75, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x5f, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x06, 0x12, 0x19,
	0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x5f, 0x6c,
	0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x07, 0x22, 0x99, 0x02, 0x0a, 0x0f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a,
	0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x6d, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x6f, 0x6e,
	0x65, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x10,
	0x03, 0x12, 0x1c, 0x0a, 0x18, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12,
	0x18, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x70, 0x72, 0x6f,
	0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x5f, 0x6c, 0x6f, 0x67,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x10, 0x07, 0x12, 0x18, 0x0a,
	0x14, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x6e, 0x69, 0x74, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x5f, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x6e, 0x69, 0x74, 0x10, 0x09, 0x42, 0x03, 0x5a, 0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData = file_config_proto_rawDesc
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_proto_rawDescData)
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_proto_goTypes = []any{
	(ConfigMsg_ConfigClientCmd)(0), // 0: Config.ConfigMsg.ConfigClientCmd
	(ConfigMsg_ConfigServerMsg)(0), // 1: Config.ConfigMsg.ConfigServerMsg
	(*KeysValues)(nil),             // 2: Config.KeysValues
	(*ConfigMsg)(nil),              // 3: Config.ConfigMsg
	nil,                            // 4: Config.KeysValues.KeyValueEntry
	nil,                            // 5: Config.ConfigMsg.SectionsKeysValuesEntry
}
var file_config_proto_depIdxs = []int32{
	4, // 0: Config.KeysValues.KeyValue:type_name -> Config.KeysValues.KeyValueEntry
	0, // 1: Config.ConfigMsg.ReqClient:type_name -> Config.ConfigMsg.ConfigClientCmd
	5, // 2: Config.ConfigMsg.SectionsKeysValues:type_name -> Config.ConfigMsg.SectionsKeysValuesEntry
	1, // 3: Config.ConfigMsg.RespServer:type_name -> Config.ConfigMsg.ConfigServerMsg
	2, // 4: Config.ConfigMsg.SectionsKeysValuesEntry.value:type_name -> Config.KeysValues
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_rawDesc = nil
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
